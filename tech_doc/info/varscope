<h1>Variable Scope</h1>
<p>When you declare a variable outside of any function, it is called a global variable, because it is available to any other code in the current document. When you declare a variable within a function, it is called a local variable, because it is available only within that function.</p>

<p> JavaScript before ECMAScript 2015 does not have block statement scope. Rather, a variable declared within a block is local to the function (or global scope) that the block resides within.</p>

<p>For example, the following code will log 5, because the scope of x is the global context (or the function context if the code is part of a function). The scope of x is not limited to the immediate if statement block.</p>

<p>if (true) {<br>
  var x = 5;<br> 
}<br>
console.log(x);  // x is 5<br>
</p>
<p>This behavior changes when using the let declaration (introduced in ECMAScript 2015).</p>

<p>This behavior changes when using the let declaration (introduced in ECMAScript 2015).<p>
<p> 
if (true) {<br>
  let y = 5;<br>
}<br></p>
<p>console.log(y);  // ReferenceError: y is not defined</p>